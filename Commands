# Creando una llave ssh
git config --global user.name "Carlos"
git config --global user.email "solrac.hincapie@gmail.com"
ssh-keygen -t rsa -b 4096 -C "solrac.hincapie@gmail.com"
sudo apt-get install xclip
cat ~/.ssh/id_rsa.pub
# Copiar llave si no funciona: xclip -sel clip < ~/.ssh/id_rsa.pub
ssh -T git@github.com
git add .
git commit -m"Inicio
git branch -M main
git remote add origin git@github.com:solrac68/curso_terra.git

# Generador de .gitignore
https://www.toptal.com/developers/gitignore


# Instalación Terraform Debian y Ubuntu
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
sudo apt install terraform


sudo apt install tree
tree -a

terraform init
terraform fmt -diff
terraform plan
terraform apply # Necesita confirmación
terraform apply plan1 # No necesita confirmación
terraform destroy
terraform plan -destroy
terraform plan -out=plan1

Lista los componentes instalados o aprovisionados por terraform
terraform state list

# The terraform fmt command automatically updates configurations in the current directory for readability and consistency.
# Format your configuration. Terraform will print out the names of the files it modified, 
terraform fmt

#Valida la configuración.
terraform validate

Aplica configuración del archivo main.tf
$ terraform apply --auto-approve

Destrulle despliegue que se encuentra en terraform.tfstate
$ terraform destroy --auto-approve

Instalando format JSON
$ sudo apt install jq
eJEMPLO
$ terraform show -json | jq

Consulta la configuración actual y aprovisionamiento de los recursos que empiezan por "ip"
$ terraform show | grep ip

Consola iteractiva
$ terraform console
> docker_container.nodered_container.name
"nodered"
> docker_container.nodered_container.ip_address
"172.17.0.2"

Muestra las salidas de terraform
$ terraform output
IP_Address = "172.17.0.2"
container_name = "nodered"

Inicializa los nuevos componentes
$ terraform init

Muestra el estado actual
$ terraform state list


Muestra
$ terraform destroy --auto-approve






